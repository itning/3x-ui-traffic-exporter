name: Build Multi-Platform Binaries and Upload to Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'

      - name: Build Binary
        run: |
          export GOOS=${{ matrix.os }}
          export GOARCH=${{ matrix.arch }}
          # Determine the output file name with .exe extension for Windows
          if [ "${{ matrix.os }}" = "windows" ]; then
            export OUTPUT_FILE="3x-ui-traffic-exporter-${GOOS}-${GOARCH}.exe"
          else
            export OUTPUT_FILE="3x-ui-traffic-exporter-${GOOS}-${GOARCH}"
          fi
          echo "Building for ${GOOS}/${GOARCH}..."
          go build -o $OUTPUT_FILE main.go

      - name: Upload to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }} # Release 的上传 URL
          asset_path: ${{ github.workspace }}/${{ matrix.os == 'windows' && '3x-ui-traffic-exporter-' ~ matrix.os ~ '-' ~ matrix.arch ~ '.exe' || '3x-ui-traffic-exporter-' ~ matrix.os ~ '-' ~ matrix.arch }}
          asset_name: 3x-ui-traffic-exporter-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }}
          asset_content_type: application/octet-stream
